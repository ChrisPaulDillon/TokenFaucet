/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ChrisCoin, ChrisCoinInterface } from "../../contracts/ChrisCoin";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lockTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "requestTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600981526020017f4368726973436f696e00000000000000000000000000000000000000000000008152506040518060400160405280600281526020017f434300000000000000000000000000000000000000000000000000000000000081525081600390805190602001906200009692919062000258565b508060049080519060200190620000af92919062000258565b505050620000cf336a084595161401484a000000620000d560201b60201c565b620004b4565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000148576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200013f9062000369565b60405180910390fd5b6200015c600083836200024e60201b60201c565b8060026000828254620001709190620003c4565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254620001c79190620003c4565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200022e919062000432565b60405180910390a36200024a600083836200025360201b60201c565b5050565b505050565b505050565b82805462000266906200047e565b90600052602060002090601f0160209004810192826200028a5760008555620002d6565b82601f10620002a557805160ff1916838001178555620002d6565b82800160010185558215620002d6579182015b82811115620002d5578251825591602001919060010190620002b8565b5b509050620002e59190620002e9565b5090565b5b8082111562000304576000816000905550600101620002ea565b5090565b600082825260208201905092915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b600062000351601f8362000308565b91506200035e8262000319565b602082019050919050565b60006020820190508181036000830152620003848162000342565b9050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620003d1826200038b565b9150620003de836200038b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111562000416576200041562000395565b5b828201905092915050565b6200042c816200038b565b82525050565b600060208201905062000449600083018462000421565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200049757607f821691505b60208210811415620004ae57620004ad6200044f565b5b50919050565b61170c80620004c46000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063395093511161008c578063a457c2d711610066578063a457c2d714610216578063a4beda6314610246578063a9059cbb14610276578063dd62ed3e146102a6576100cf565b8063395093511461019857806370a08231146101c857806395d89b41146101f8576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461012257806323b872dd14610140578063313ce56714610170578063359cf2b71461018e575b600080fd5b6100dc6102d6565b6040516100e99190610ec8565b60405180910390f35b61010c60048036038101906101079190610f83565b610368565b6040516101199190610fde565b60405180910390f35b61012a61038b565b6040516101379190611008565b60405180910390f35b61015a60048036038101906101559190611023565b610395565b6040516101679190610fde565b60405180910390f35b6101786103c4565b6040516101859190611092565b60405180910390f35b6101966103cd565b005b6101b260048036038101906101ad9190610f83565b6104b5565b6040516101bf9190610fde565b60405180910390f35b6101e260048036038101906101dd91906110ad565b61055f565b6040516101ef9190611008565b60405180910390f35b6102006105a7565b60405161020d9190610ec8565b60405180910390f35b610230600480360381019061022b9190610f83565b610639565b60405161023d9190610fde565b60405180910390f35b610260600480360381019061025b91906110ad565b610723565b60405161026d9190611008565b60405180910390f35b610290600480360381019061028b9190610f83565b61073b565b60405161029d9190610fde565b60405180910390f35b6102c060048036038101906102bb91906110da565b61075e565b6040516102cd9190611008565b60405180910390f35b6060600380546102e590611149565b80601f016020809104026020016040519081016040528092919081815260200182805461031190611149565b801561035e5780601f106103335761010080835404028352916020019161035e565b820191906000526020600020905b81548152906001019060200180831161034157829003601f168201915b5050505050905090565b6000806103736107e5565b90506103808185856107ed565b600191505092915050565b6000600254905090565b6000806103a06107e5565b90506103ad8582856109b8565b6103b8858585610a44565b60019150509392505050565b60006012905090565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054421161044e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610445906111ed565b60405180910390fd5b610461336802b5e3af16b1880000610cc5565b6201518042610470919061123c565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000806104c06107e5565b9050610554818585600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461054f919061123c565b6107ed565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546105b690611149565b80601f01602080910402602001604051908101604052809291908181526020018280546105e290611149565b801561062f5780601f106106045761010080835404028352916020019161062f565b820191906000526020600020905b81548152906001019060200180831161061257829003601f168201915b5050505050905090565b6000806106446107e5565b90506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508381101561070a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070190611304565b60405180910390fd5b61071782868684036107ed565b60019250505092915050565b60056020528060005260406000206000915090505481565b6000806107466107e5565b9050610753818585610a44565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561085d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085490611396565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c490611428565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516109ab9190611008565b60405180910390a3505050565b60006109c4848461075e565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610a3e5781811015610a30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2790611494565b60405180910390fd5b610a3d84848484036107ed565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610ab4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aab90611526565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1b906115b8565b60405180910390fd5b610b2f838383610e25565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610bb5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bac9061164a565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c48919061123c565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610cac9190611008565b60405180910390a3610cbf848484610e2a565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d35576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2c906116b6565b60405180910390fd5b610d4160008383610e25565b8060026000828254610d53919061123c565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610da8919061123c565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610e0d9190611008565b60405180910390a3610e2160008383610e2a565b5050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e69578082015181840152602081019050610e4e565b83811115610e78576000848401525b50505050565b6000601f19601f8301169050919050565b6000610e9a82610e2f565b610ea48185610e3a565b9350610eb4818560208601610e4b565b610ebd81610e7e565b840191505092915050565b60006020820190508181036000830152610ee28184610e8f565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f1a82610eef565b9050919050565b610f2a81610f0f565b8114610f3557600080fd5b50565b600081359050610f4781610f21565b92915050565b6000819050919050565b610f6081610f4d565b8114610f6b57600080fd5b50565b600081359050610f7d81610f57565b92915050565b60008060408385031215610f9a57610f99610eea565b5b6000610fa885828601610f38565b9250506020610fb985828601610f6e565b9150509250929050565b60008115159050919050565b610fd881610fc3565b82525050565b6000602082019050610ff36000830184610fcf565b92915050565b61100281610f4d565b82525050565b600060208201905061101d6000830184610ff9565b92915050565b60008060006060848603121561103c5761103b610eea565b5b600061104a86828701610f38565b935050602061105b86828701610f38565b925050604061106c86828701610f6e565b9150509250925092565b600060ff82169050919050565b61108c81611076565b82525050565b60006020820190506110a76000830184611083565b92915050565b6000602082840312156110c3576110c2610eea565b5b60006110d184828501610f38565b91505092915050565b600080604083850312156110f1576110f0610eea565b5b60006110ff85828601610f38565b925050602061111085828601610f38565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061116157607f821691505b602082108114156111755761117461111a565b5b50919050565b7f6c6f636b2074696d6520686173206e6f7420657870697265642e20506c65617360008201527f652074727920616761696e206c61746572000000000000000000000000000000602082015250565b60006111d7603183610e3a565b91506111e28261117b565b604082019050919050565b60006020820190508181036000830152611206816111ca565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061124782610f4d565b915061125283610f4d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156112875761128661120d565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006112ee602583610e3a565b91506112f982611292565b604082019050919050565b6000602082019050818103600083015261131d816112e1565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611380602483610e3a565b915061138b82611324565b604082019050919050565b600060208201905081810360008301526113af81611373565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611412602283610e3a565b915061141d826113b6565b604082019050919050565b6000602082019050818103600083015261144181611405565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061147e601d83610e3a565b915061148982611448565b602082019050919050565b600060208201905081810360008301526114ad81611471565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611510602583610e3a565b915061151b826114b4565b604082019050919050565b6000602082019050818103600083015261153f81611503565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006115a2602383610e3a565b91506115ad82611546565b604082019050919050565b600060208201905081810360008301526115d181611595565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000611634602683610e3a565b915061163f826115d8565b604082019050919050565b6000602082019050818103600083015261166381611627565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b60006116a0601f83610e3a565b91506116ab8261166a565b602082019050919050565b600060208201905081810360008301526116cf81611693565b905091905056fea26469706673582212203531c0b7bf133aaecf38717111884723434222b75a08506ce79ec1b39025935764736f6c63430008080033";

type ChrisCoinConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ChrisCoinConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ChrisCoin__factory extends ContractFactory {
  constructor(...args: ChrisCoinConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ChrisCoin> {
    return super.deploy(overrides || {}) as Promise<ChrisCoin>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ChrisCoin {
    return super.attach(address) as ChrisCoin;
  }
  override connect(signer: Signer): ChrisCoin__factory {
    return super.connect(signer) as ChrisCoin__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChrisCoinInterface {
    return new utils.Interface(_abi) as ChrisCoinInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ChrisCoin {
    return new Contract(address, _abi, signerOrProvider) as ChrisCoin;
  }
}
